# Trigger manual deployment via GitHub UI
name: Manual Deploy to Cloud Run

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    env:
      GOOGLE_CLOUD_PROJECT: ${{ secrets.PROJECT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: test-ingestion-service
          region: ${{ secrets.REGION }}
          source: .
          project_id: ${{ secrets.PROJECT_ID }}
          flags: '--service-account=${{ secrets.SERVICE_ACCOUNT }}'
          env_vars: |
            GOOGLE_CLOUD_PROJECT=${{ secrets.PROJECT_ID }}
      
      - name: Allow unauthenticated access
        run: |
          gcloud run services add-iam-policy-binding test-ingestion-service \
            --region=${{ secrets.REGION }} \
            --member="allUsers" \
            --role="roles/run.invoker" \
            --project=${{ secrets.PROJECT_ID }}

      - name: Get Deployment URL
        id: get-url
        run: |
          URL=$(gcloud run services describe test-ingestion-service \
            --platform=managed \
            --region=${{ secrets.REGION }} \
            --project=${{ secrets.PROJECT_ID }} \
            --format='value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Integration Test /posts endpoint (ingestion)
        run: |
          echo "Calling /posts to trigger ingestion..."
          STATUS=$(curl -s -o response.txt -w "%{http_code}" "${{ steps.get-url.outputs.url }}/posts")
          cat response.txt
          if [ "$STATUS" != "200" ]; then
            echo "/posts failed with status $STATUS"
            exit 1
          else
            echo "/posts returned 200 OK"
          fi

      - name: Integration Test /posts/get endpoint
        run: |
          echo "Calling /posts/get..."
          RESPONSE=$(curl -s -w "\n%{http_code}" "${{ steps.get-url.outputs.url }}/posts/get")
          BODY=$(echo "$RESPONSE" | head -n1)
          STATUS=$(echo "$RESPONSE" | tail -n1)

          echo "Status: $STATUS"
          echo "Body: $BODY"

          if [ "$STATUS" != "200" ]; then
            echo "/posts/get failed with status $STATUS"
            exit 1
          fi

          if [ -z "$BODY" ] || [ "$BODY" = "[]" ]; then
            echo "/posts/get returned empty response"
            exit 1
          else
            echo "/posts/get returned non-empty data"
          fi
